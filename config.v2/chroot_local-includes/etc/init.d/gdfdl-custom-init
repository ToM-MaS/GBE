#!/bin/bash

### BEGIN INIT INFO
# Provides:          gdfdl-custom-init
# Required-Start:    mysql
# Required-Stop:
# X-Start-Before:    apache2 freeswitch gdfdl-init
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Do initial task for first startup of Gemeinschaft
# Description:       
### END INIT INFO

# General settings
[ -f /gdfdl.conf ] && source /gdfdl.conf
[ -f /gdfdl-custom.conf ] && source /gdfdl-custom.conf
[ -f /etc/gemeinschaft/system.conf ] && source /etc/gemeinschaft/system.conf || echo "FATAL ERROR: Local configuration file in /etc/gemeinschaft/system.conf missing"
set -e

# Enforce root rights
#
if [[ ${EUID} -ne 0 ]];
	then
	echo "ERROR: $0 needs to be run as root. Aborting ..."
	exit 1
fi

if [[ x`cat /proc/cmdline | grep boot=live` != x"" ]]
	then
	LIVE=true
else
	LIVE=false
fi

case "$1" in
	start)
		# Post-Installation setup for Gemeinschaft 5
		#

		echo -e "Preparing Gemeinschaft for 1st start ...\n"

		# write correct APT source list
		echo "deb http://cdn.debian.net/debian/ squeeze main contrib" > /etc/apt/sources.list
		echo "deb-src http://cdn.debian.net/debian/ squeeze main contrib" >> /etc/apt/sources.list
		echo "deb http://security.debian.org/ squeeze/updates main contrib" >> /etc/apt/sources.list
		echo "deb-src http://security.debian.org/ squeeze/updates main contrib" >> /etc/apt/sources.list

		# Generate new password for gsmaster system administrator for live system
		if [[ "${LIVE}" == true ]]; then
			echo "** Generating individual password for live-system user 'gsmaster'"
			apg -m10 -a0 -n 1 -M l > "/home/gsmaster/.password"
			GSMASTER_PASSWORD="`cat /home/gsmaster/.password`"
			chown gsmaster "/home/gsmaster/.password"
			chmod 400 "/home/gsmaster/.password"
			echo -e "${GSMASTER_PASSWORD}\n${GSMASTER_PASSWORD}" | (passwd gsmaster)
		fi

		# Database setup
		#
		
		# Change MySQL password for user root
		if [ ! -f /root/.mysql_root_password ]
			then
			echo "** Generating individual password for MySQL user 'root'"
			apg -m30 -a0 -n 1 -M NCL > /root/.mysql_root_password
			chmod 0440 /root/.mysql_root_password
			MYSQL_PASSWD_ROOT="`cat /root/.mysql_root_password`"
			mysql -e "USE mysql; DELETE FROM user WHERE user='root' AND NOT (host='localhost' OR host='127.0.0.1'); UPDATE user SET password=PASSWORD('${MYSQL_PASSWD_ROOT}') WHERE user='root' AND (host='localhost' OR host='127.0.0.1'); FLUSH PRIVILEGES;" --user=root --password="${MYSQL_PASSWD}"
		else
			MYSQL_PASSWD_ROOT="`cat /root/.mysql_root_password`"
		fi

		# Load timezone information into database
		echo "** Loading timezone information into MySQL database"
		mysql_tzinfo_to_sql /usr/share/zoneinfo 2>/dev/null | mysql mysql --user=root --password="${MYSQL_PASSWD_ROOT}" 2>&1 >/dev/null
		/etc/init.d/mysql restart

		# Create MySQL user for Gemeinschaft
		if [ ! -f "${GS_MYSQL_PASSWORD_FILE}" ]
			then
			echo "** Creating MySQL user '${GS_MYSQL_USER}'"
			apg -m30 -a0 -n 1 -M NCL > "${GS_MYSQL_PASSWORD_FILE}"
			MYSQL_PASSWD_GS="`cat "${GS_MYSQL_PASSWORD_FILE}"`"
			mysql -e "GRANT ALL PRIVILEGES ON ${GS_MYSQL_DB}.* TO ${GS_MYSQL_USER} @'localhost' IDENTIFIED BY '${MYSQL_PASSWD_GS}'; FLUSH PRIVILEGES;" --user=root --password="${MYSQL_PASSWD_ROOT}"
		else
			MYSQL_PASSWD_GS="`cat "${GS_MYSQL_PASSWORD_FILE}"`"
		fi

		# Generate ODBC configuration files
		echo "** Configuring ODBC"
echo "[gemeinschaft]
Description  = MySQL database for Gemeinschaft
Driver       = /usr/lib/odbc/libmyodbc.so
Setup        = /usr/lib/odbc/libodbcmyS.so
" >/etc/odbcinst.ini

echo "[gemeinschaft]
Description  = MySQL database for Gemeinschaft
Driver       = /usr/lib/odbc/libmyodbc.so
SERVER       = localhost
PORT         = 3306
DATABASE     = ${GS_MYSQL_DB}
OPTION       = 67108864
USER         = ${GS_MYSQL_USER}
PASSWORD     = ${MYSQL_PASSWD_GS}
" >/var/lib/freeswitch/.odbc.ini
chown -v freeswitch.freeswitch /var/lib/freeswitch/.odbc.ini
chmod -v 0640 /var/lib/freeswitch/.odbc.ini

		# (re)create Gemeinschaft database
		echo "** Creating MySQL database 'gemeinschaft'"
		mysql -e "DROP DATABASE IF EXISTS gemeinschaft; CREATE DATABASE gemeinschaft;" --user=root --password="${MYSQL_PASSWD_ROOT}"

		# Run update script
		/usr/local/bin/gs-update.sh --force-init

		# self destruction
		#
		rm -rf /gdfdl-custom.conf
		rm -rf /etc/init.d/gdfdl-custom-init; update-rc.d gdfdl-custom-init remove
		;;

	stop)
		# nothing to do
		;;
	*)
		echo "Undefined usage."
		exit 3
		;;
esac
