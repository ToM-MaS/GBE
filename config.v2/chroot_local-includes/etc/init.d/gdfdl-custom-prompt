#! /bin/bash
### BEGIN INIT INFO
# Provides:          gdfdl-prompt
# Required-Start:    $local_fs $all
# Required-Stop:     
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Gemeinschaft Login screen
# Description:       
### END INIT INFO
#
# Create customized login screen for Gemeinschaft 5
#

# General settings
[ -f /etc/gemeinschaft/system.conf ] && source /etc/gemeinschaft/system.conf || echo "FATAL ERROR: Local configuration file in /etc/gemeinschaft/system.conf missing"
IPS="`/bin/hostname -I`"
FQDN="`/bin/hostname -f`"

# Enforce root rights
#
if [[ ${EUID} -ne 0 ]];
	then
	echo "ERROR: $0 needs to be run as root. Aborting ..."
	exit 1
fi

# Read GS version from database and update local config file
#
if [ -f "${GS_MYSQL_PASSWORD_FILE}" ]; then
	MYSQL_PASSWD="`cat ${GS_MYSQL_PASSWORD_FILE}`"
	GS_VERSION=$(mysql --skip-column-names -e "SELECT value FROM gs_parameters WHERE name = 'GEMEINSCHAFT_VERSION';" --user=${GS_MYSQL_USER} --password="${MYSQL_PASSWD}" ${GS_MYSQL_DB} || echo "5.x")
	[[ x"${GS_VERSION}" == x"" ]] && GS_VERSION="5.x"
	mv -f /etc/gemeinschaft/system.conf /etc/gemeinschaft/system.conf.bak
	grep -Ev ^GS_VERSION= /etc/gemeinschaft/system.conf.bak > /etc/gemeinschaft/system.conf
	echo "GS_VERSION=\"${GS_VERSION}\"" >> /etc/gemeinschaft/system.conf
else
	echo "ERROR: GS database password file ${GS_MYSQL_PASSWORD_FILE} not found"
fi

# Check for live status
#
if [[ x`cat /proc/cmdline | grep boot=live` != x"" ]]
	then
	LIVE=true
else
	LIVE=false
fi

# Check if we have a production or development state build
# (production = master-branch was used from GS5 and GBE repo)
#
if [[ `expr length ${GS_BUILDNAME}` == 10 && x${GS_BRANCH} = x"master" ]]
	then
	PRODUCTION=true
else
	PRODUCTION=false
fi

#
# Write login screen to /etc/issue
#

echo "
***      _____                                               _____
***     (.---.)                 GEMEINSCHAFT 5              (.---.)
***      /:::\\\ _.-----------------------------------------._ /:::\\\ 
***      -----                                               -----" > /etc/issue

if [[ ${PRODUCTION} == true ]]
	then
	echo "***     Release Version: ${GS_VERSION}#${GS_BUILDNAME}" >> /etc/issue
else
	echo "***     Development Version: ${GS_VERSION}-${GS_BRANCH}#${GS_BUILDNAME}" >> /etc/issue
fi

echo "***    -------------------------------------------------------------
***
***     You have to configure Gemeinschaft with a web browser:
***" >> /etc/issue

if [[ -z "${IPS}" ]]; then
	echo "***     - FAILED network configuration detection -" >> /etc/issue
	echo "***" >> /etc/issue
else
	for ADDRESS in ${FQDN} ${IPS}
	do
		[[ ${ADDRESS} =~ "localhost" ]] && echo "***" >> /etc/issue && continue
		[[ ${ADDRESS} =~ ":" ]] && ADDRESS="["${ADDRESS}"]" 
		echo "***     http://${ADDRESS}" >> /etc/issue
	done
fi

echo "***
***
***
***" >> /etc/issue

if [[ ${LIVE} == true ]]
	then
	echo "***     DEMO LIVE SYSTEM - ALL CHANGES WILL BE LOST AFTER A REBOOT!" >> /etc/issue
	echo "***" >> /etc/issue
	echo "***     LOGIN   : gsmaster" >> /etc/issue
    echo "***     PASSWORD: `cat /home/gsmaster/.password`" >> /etc/issue
else
	echo "***" >> /etc/issue
	echo "***" >> /etc/issue
	echo "***" >> /etc/issue
	echo "***" >> /etc/issue
fi

echo "***
***    _____________________________________________________________
***          brought to you by AMOOMA GmbH  - http://amooma.de
" >> /etc/issue


#
# Write motd and issue.net
#
if [[ ${PRODUCTION} == true ]]
	then
	echo "Welcome to GEMEINSCHAFT ${GS_VERSION}#${GS_BUILDNAME}" > /etc/issue.net
echo "
***   Welcome to GEMEINSCHAFT ${GS_VERSION}#${GS_BUILDNAME}" > /etc/motd
else
	echo "Welcome to GEMEINSCHAFT ${GS_VERSION}-${GS_BRANCH}#${GS_BUILDNAME}" > /etc/issue.net
echo "
***   Welcome to GEMEINSCHAFT ${GS_VERSION}-${GS_BRANCH}#${GS_BUILDNAME}" > /etc/motd
fi


echo "***
***   Need help with Gemeinschaft? We have an excellent free mailinglist
***   and offer the best support and consulting money can buy. Have a
***   look at http://amooma.de/gemeinschaft/gs5 for more information.
***
" >> /etc/motd
