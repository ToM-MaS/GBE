#!/bin/bash
#
# Gemeinschaft 5
# Install Gemeinschaft 5
#
# Copyright (c) 2012-2013, Julian Pawlowski <jp@jps-networks.eu>
# See LICENSE.GBE file for details.
#

# check each command return codes for errors
#
set -e

# General settings
[ -e /etc/gemeinschaft/system.conf ] && source /etc/gemeinschaft/system.conf || echo "FATAL ERROR: Local configuration file in /etc/gemeinschaft/system.conf missing"
source /gdfdl.conf
[ -f /gdfdl-custom.conf ] && source /gdfdl-custom.conf
GDFDL_BUILDNAME="`cat /etc/gdfdl_build`"
[[ ${GDFDL_BUILDNAME} =~ "-" ]] && GDFDL_BRANCH=`echo ${GDFDL_BUILDNAME} | cut -d - -f2` || GDFDL_BRANCH="master"
source /etc/gemeinschaft/system.conf

if [ -e "/etc/rpi-issue" ]; then
	PLATFORM="rpi"
else
	PLATFORM="x86"
fi

echo -e "\n###########################################################
## GBE: Gemeinschaft installation\n\n"

# Clone the git repository
#
if [[ ! -d "${GS_DIR}" ]];
	then

	# use master branch if no explicit branch was given and GBE branch is master
	[[ x"${GS_BRANCH}" == x"" && x"${GDFDL_BRANCH}" == x"develop" ]] && GS_BRANCH="develop"
	[[ x"${GS_BRANCH}" == x"" && x"${GDFDL_BRANCH}" != x"develop" ]] && GS_BRANCH="master"
	[[ ! -f /etc/gemeinschaft_branch ]] && echo "${GS_BRANCH}" > /etc/gemeinschaft_branch

	echo -e "GBE: Downloading GS from ${GS_GIT_URL} (branch: ${GS_BRANCH}) ...\n"

	# Setup Github user credentials for login
	#
	if [ ! -z "${GS_GIT_USER}" -a ! -z "${GS_GIT_PASSWORD}" ]
		then
		echo "Github credentials found!"
echo "machine Github.com
login ${GS_GIT_USER}
password ${GS_GIT_PASSWORD}
" >  ~/.netrc
	fi
	
	set +e
	c=1
	while [[ $c -le 5 ]]
	do
		git clone -b "${GS_BRANCH}" "${GS_GIT_URL}" "${GS_DIR}" 2>&1
		if [ "$?" -eq "0" ]
			then
			break;
		else
			[[ $c -eq 5 ]] && exit 1
			(( c++ ))
			rm -rf "${GS_DIR}"
			echo "$c. try in 3 seconds ..."
			sleep 3
		fi
	done
	set -e

	[ -f "${GS_DIR}/config/application.rb" ] && rm -rf ~/.netrc
else
	[ -f /etc/gemeinschaft_branch ] && GS_BRANCH="`cat /etc/gemeinschaft_branch`" || GS_BRANCH="master"

	#FIXME lazy workaround for Jenkins who loses our branch names ...
	cd "${GS_DIR}"
	set +e
	git checkout -b "${GS_BRANCH}"
	set -e
	cd -
fi

# Make sure we checkout the latest tagged version in case we are in the master branch
if [ "${GS_BRANCH}" == "master" ]; then
	cd "${GS_DIR}"
	git checkout `git tag -l | tail -n1`
	cd -
fi

#  Create alias for GS5 backwards compatibility
#
GS_DIR_NORMALIZED=`dirname "${GS_DIR}"`/gemeinschaft
ln -sv `basename "${GS_DIR}"` "${GS_DIR_NORMALIZED}"

# Install GS related Gems
#
chown ${GSE_USER} ${GS_DIR} -R
echo -e "GBE: Install GS gems ...\n"
su - ${GSE_USER} -c "source ~/.rvm/scripts/rvm; cd ${GS_DIR}; bundle install 2>&1"

# Create local configuration dir
#
echo -e "GBE: Create local configuration directory ...\n"
GS_DIR_LOCAL="/var/opt/`basename "${GS_DIR}"`"
GS_DIR_NORMALIZED_LOCAL="`dirname "${GS_DIR_LOCAL}"`/`basename "${GS_DIR_NORMALIZED}"`"
mkdir -p ${GS_DIR_LOCAL}/freeswitch/conf
ln -sv `basename "${GS_DIR_LOCAL}"` "${GS_DIR_NORMALIZED_LOCAL}"

# Move Freeswitch storage files
[ -d /var/lib/freeswitch/db ] && mv /var/lib/freeswitch/db ${GS_DIR_LOCAL}/freeswitch/db || mkdir -p ${GS_DIR_LOCAL}/freeswitch/db
[ -d /var/lib/freeswitch/storage ] && mv /var/lib/freeswitch/storage ${GS_DIR_LOCAL}/freeswitch/storage || mkdir -p ${GS_DIR_LOCAL}/freeswitch/storage
[ -d /var/lib/freeswitch/recordings ] && mv /var/lib/freeswitch/recordings ${GS_DIR_LOCAL}/freeswitch/recordings || mkdir -p ${GS_DIR_LOCAL}/freeswitch/recordings
[ -d /var/lib/freeswitch/voicemail ] && mv /var/lib/freeswitch/voicemail ${GS_DIR_LOCAL}/freeswitch/voicemail || mkdir -p ${GS_DIR_LOCAL}/freeswitch/voicemail
ln -sv ${GS_DIR_NORMALIZED_LOCAL}/freeswitch/db /var/lib/freeswitch/db
ln -sv ${GS_DIR_NORMALIZED_LOCAL}/freeswitch/storage /var/lib/freeswitch/storage
ln -sv ${GS_DIR_NORMALIZED_LOCAL}/freeswitch/recordings /var/lib/freeswitch/recordings
ln -sv ${GS_DIR_NORMALIZED_LOCAL}/freeswitch/voicemail /var/lib/freeswitch/voicemail

echo -e "GBE: Adjust Apache2 configuration ...\n"
PASSENGER_ROOT="`su - ${GSE_USER} -c "source ~/.rvm/scripts/rvm; passenger-config --root"`"
echo "LoadModule passenger_module ${PASSENGER_ROOT%*/*}/passenger/buildout/apache2/mod_passenger.so" > /etc/apache2/mods-available/passenger.load
echo "PassengerRoot ${PASSENGER_ROOT%*/*}/passenger" > /etc/apache2/mods-available/passenger.conf

# enable modules
a2enmod rewrite 2>&1
a2enmod passenger 2>&1
# enable virtual webserver
a2dissite default 2>&1
a2ensite gemeinschaft 2>&1

echo -e "GBE: Write local settings file ..."
echo "GS_DIR=\"${GS_DIR}\"" >> /etc/gemeinschaft/system.conf
echo "GS_DIR_LOCAL=\"${GS_DIR_LOCAL}\"" >> /etc/gemeinschaft/system.conf
echo "GS_DIR_NORMALIZED=\"${GS_DIR_NORMALIZED}\"" >> /etc/gemeinschaft/system.conf
echo "GS_DIR_NORMALIZED_LOCAL=\"${GS_DIR_NORMALIZED_LOCAL}\"" >> /etc/gemeinschaft/system.conf
echo "GS_BRANCH=\"${GS_BRANCH}\""  >> /etc/gemeinschaft/system.conf
echo "GS_MYSQL_USER=\"gemeinschaft\""  >> /etc/gemeinschaft/system.conf
echo "GS_MYSQL_DB=\"gemeinschaft\""  >> /etc/gemeinschaft/system.conf
echo "GS_MYSQL_PASSWORD_FILE=\"/var/lib/gemeinschaft/.gs_mysql_password\""  >> /etc/gemeinschaft/system.conf
echo "GS_GIT_URL=\"${GS_GIT_URL}\"" >> /etc/gemeinschaft/system.conf
echo "RAILS_ENV=\"$GSE_ENV\"" >> /etc/gemeinschaft/system.conf

rm -f /etc/gemeinschaft_branch

# Install moh
/opt/gemeinschaft-system/bin/gs-addon.sh install fs-sounds-music-8khz

# Install voice prompts
/opt/gemeinschaft-system/bin/gs-addon.sh install fs-sounds-en-callie-8khz
/opt/gemeinschaft-system/bin/gs-addon.sh install fs-sounds-de-tts-google-8khz
